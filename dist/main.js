(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>m});var a=t(537),i=t.n(a),o=t(645),r=t.n(o),c=t(667),s=t.n(c),A=new URL(t(822),t.b),d=new URL(t(794),t.b),l=r()(i());l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Handlee&display=swap);"]);var p=s()(A),u=s()(d);l.push([n.id,`@font-face {\n    font-family: "Bulgatti";\n    src: url(${p});\n    font-style: normal;\n    font-weight: ;\n}\n*\n{\n    box-sizing: border-box;\n    margin: 0px;\n    padding: 0px;\n    color: lightgrey;\n    font-family: "Handlee";\n    font-size: 1.2rem;\n}\n\n\n\nbody{\n    background-color: black;\n    background-image: url(${u});\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-attachment: fixed ;\n}\n\n#content\n{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 24px;\n\n}\nh1 {\n    margin-top: 20px;\n    font-size: 50px;\n}\nnav{\n    display: flex;\n    justify-content: space-around;\n    width: 66%;\n    padding: 40px;\n}\n.tab {\n    cursor: pointer;\n    padding: 10px;\n    display: inline-block;\n    font-size: 36px;\n    position: relative;\n}\n\n.tab::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%; /* Set the initial left position to the midpoint */\n    transform: translateX(-50%); /* Center the underline */\n    width: 0;\n    height: 2px;\n    background-color: white;\n    transition: width 0.3s ease;\n    z-index: 1;\n}\n\n.tab-active::after {\n    width: 100%;\n}\np{\n    text-align: center;\n    font-size: 30px;\n    line-height: 40px;\n    letter-spacing: 0.1ch;\n    \n}\n\nimg\n{\n    border-radius: 10px;\n    max-width: 500px;\n}\n.section\n{\n    background-color: rgba(53, 50, 54, 0.5);\n    max-width: 66%;\n    border-radius: 16px;\n    padding: 20px;\n}\n.menu\n{\n    width: 66%;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    grid-template-columns: 1fr 1fr;\n    gap: 8px;\n    background-color: rgba(53, 50, 54, 0.5);\n    padding: 12px;\n    border-radius: 12px;\n}\n.menu h1{\n    grid-column: 1 / -1;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 12px;\n}\n.line\n{\n    height: 3px;\n    background-color: white;\n    width: 90%;\n    content: "";\n    align-self: center;\n}\n.menu p{\n    text-align: right;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 12px;\n    padding-right: 24px;\n\n}\n.price\n{\n    font-size: 36px;\n}\n.menu img{\n    width: 400px;\n}\nform\n{\n    background-color: rgba(53, 50, 54, 0.5);\n    width: 66%;\n    padding: 24px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 16px;\n\n\n}\n.form-row{\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n    padding: 0px;\n}\n\n.input\n{\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\ninput\n{\n    padding: 4px;\n    line-height: 3;\n    color: black;\n}\nform button{\n    padding: 12px;\n    color: black;\n}\nform button:hover\n{\n    background-color: green;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,4CAA6B;IAC7B,kBAAkB;IAClB,aAAa;AACjB;AAEA;;IAEI,sBAAsB;IACtB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,sBAAsB;IACtB,iBAAiB;AACrB;;;;AAIA;IACI,uBAAuB;IACvB,yDAAwC;IACxC,4BAA4B;IAC5B,sBAAsB;IACtB,6BAA6B;AACjC;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;;AAEb;AACA;IACI,gBAAgB;IAChB,eAAe;AACnB;AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,UAAU;IACV,aAAa;AACjB;AACA;IACI,eAAe;IACf,aAAa;IACb,qBAAqB;IACrB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,SAAS;IACT,SAAS,EAAE,kDAAkD;IAC7D,2BAA2B,EAAE,yBAAyB;IACtD,QAAQ;IACR,WAAW;IACX,uBAAuB;IACvB,2BAA2B;IAC3B,UAAU;AACd;;AAEA;IACI,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,iBAAiB;IACjB,qBAAqB;;AAEzB;;AAEA;;IAEI,mBAAmB;IACnB,gBAAgB;AACpB;AACA;;IAEI,uCAAuC;IACvC,cAAc;IACd,mBAAmB;IACnB,aAAa;AACjB;AACA;;IAEI,UAAU;IACV,aAAa;IACb,4BAA4B;IAC5B,8BAA8B;IAC9B,QAAQ;IACR,uCAAuC;IACvC,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;;IAEI,WAAW;IACX,uBAAuB;IACvB,UAAU;IACV,WAAW;IACX,kBAAkB;AACtB;AACA;IACI,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,aAAa;IACb,mBAAmB;;AAEvB;AACA;;IAEI,eAAe;AACnB;AACA;IACI,YAAY;AAChB;AACA;;IAEI,uCAAuC;IACvC,UAAU;IACV,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;;;AAGb;AACA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,sBAAsB;IACtB,SAAS;IACT,mBAAmB;IACnB,YAAY;AAChB;;AAEA;;IAEI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;;IAEI,YAAY;IACZ,cAAc;IACd,YAAY;AAChB;AACA;IACI,aAAa;IACb,YAAY;AAChB;AACA;;IAEI,uBAAuB;AAC3B",sourcesContent:['@font-face {\n    font-family: "Bulgatti";\n    src: url("Bulgatti-xgMV.ttf");\n    font-style: normal;\n    font-weight: ;\n}\n@import url(\'https://fonts.googleapis.com/css2?family=Handlee&display=swap\');\n*\n{\n    box-sizing: border-box;\n    margin: 0px;\n    padding: 0px;\n    color: lightgrey;\n    font-family: "Handlee";\n    font-size: 1.2rem;\n}\n\n\n\nbody{\n    background-color: black;\n    background-image: url(./background1.jpg);\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-attachment: fixed ;\n}\n\n#content\n{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 24px;\n\n}\nh1 {\n    margin-top: 20px;\n    font-size: 50px;\n}\nnav{\n    display: flex;\n    justify-content: space-around;\n    width: 66%;\n    padding: 40px;\n}\n.tab {\n    cursor: pointer;\n    padding: 10px;\n    display: inline-block;\n    font-size: 36px;\n    position: relative;\n}\n\n.tab::after {\n    content: \'\';\n    position: absolute;\n    bottom: 0;\n    left: 50%; /* Set the initial left position to the midpoint */\n    transform: translateX(-50%); /* Center the underline */\n    width: 0;\n    height: 2px;\n    background-color: white;\n    transition: width 0.3s ease;\n    z-index: 1;\n}\n\n.tab-active::after {\n    width: 100%;\n}\np{\n    text-align: center;\n    font-size: 30px;\n    line-height: 40px;\n    letter-spacing: 0.1ch;\n    \n}\n\nimg\n{\n    border-radius: 10px;\n    max-width: 500px;\n}\n.section\n{\n    background-color: rgba(53, 50, 54, 0.5);\n    max-width: 66%;\n    border-radius: 16px;\n    padding: 20px;\n}\n.menu\n{\n    width: 66%;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    grid-template-columns: 1fr 1fr;\n    gap: 8px;\n    background-color: rgba(53, 50, 54, 0.5);\n    padding: 12px;\n    border-radius: 12px;\n}\n.menu h1{\n    grid-column: 1 / -1;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 12px;\n}\n.line\n{\n    height: 3px;\n    background-color: white;\n    width: 90%;\n    content: "";\n    align-self: center;\n}\n.menu p{\n    text-align: right;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 12px;\n    padding-right: 24px;\n\n}\n.price\n{\n    font-size: 36px;\n}\n.menu img{\n    width: 400px;\n}\nform\n{\n    background-color: rgba(53, 50, 54, 0.5);\n    width: 66%;\n    padding: 24px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 16px;\n\n\n}\n.form-row{\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n    padding: 0px;\n}\n\n.input\n{\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\ninput\n{\n    padding: 4px;\n    line-height: 3;\n    color: black;\n}\nform button{\n    padding: 12px;\n    color: black;\n}\nform button:hover\n{\n    background-color: green;\n}'],sourceRoot:""}]);const m=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(r[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);a&&r[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},r=[],c=0;c<n.length;c++){var s=n[c],A=a.base?s[0]+a.base:s[0],d=o[A]||0,l="".concat(A," ").concat(d);o[A]=d+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=i(u,a);a.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}r.push(l)}return r}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=a(n=n||[],i=i||{});return function(n){n=n||[];for(var r=0;r<o.length;r++){var c=t(o[r]);e[c].references--}for(var s=a(n,i),A=0;A<o.length;A++){var d=t(o[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,i&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},822:(n,e,t)=>{n.exports=t.p+"657d80f99c74fa806975.ttf"},794:(n,e,t)=>{n.exports=t.p+"20f37b5fe926151481c8.jpg"}},e={};function t(a){var i=e[a];if(void 0!==i)return i.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var i=a.length-1;i>-1&&!n;)n=a[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),i=t.n(a),o=t(569),r=t.n(o),c=t(565),s=t.n(c),A=t(216),d=t.n(A),l=t(589),p=t.n(l),u=t(426),m={};function f(){const n=document.getElementById("content"),e=document.createElement("div");e.classList.add("section");const t=document.createElement("p");t.innerHTML="Welcome to Joel's Bistro, a haven of delicacies where we stick to one motto: \n        <br><br><br> \n        <i>Every meal should be an unforgettable experience.</i>\n        <br><br><br>\n        Situated in the heart of the continent, our restaurant offers a delightful fusion of local delicacies and international dishes. \n        With passion-infused creations, we promise an unforgettable dining experience that embraces both tradition and innovation.",e.appendChild(t),n.appendChild(e);const a=document.createElement("div");a.classList.add("section");const i=document.createElement("p");i.textContent="At Joel's Bistro, our menu is a celebration of East African culinary heritage, featuring signature dishes like Nyama Choma, Ugali, and flavorful stews. \n        Alongside these treasured local favorites, we present a diverse selection of international cuisine crafted with the finest ingredients. \n        From Mediterranean-inspired delights to Asian-infused delicacies, there's something to delight every palate.",a.appendChild(i),n.appendChild(a);const o=document.createElement("div");o.classList.add("section");const r=document.createElement("p");r.textContent="Step into Joel's Bistro and immerse yourself in a warm and welcoming ambiance that mirrors the region's hospitality. \n        Our attentive staff is dedicated to ensuring your dining pleasure, making your visit an extraordinary culinary journey. \n        Whether you're seeking a taste of home or an exploration of global flavors, Joel's Bistro is where unforgettable memories and delectable experiences come together.",o.appendChild(r),n.appendChild(o)}m.styleTagTransform=p(),m.setAttributes=s(),m.insert=r().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=t.p+"d2ced6d4f0527273f093.jpg",h=t.p+"68742ab5211877c0ac66.jpg",C=t.p+"c609b16146dc30ddf002.jpg";function b(n,e,t,a){const i=document.createElement("div");i.classList.add("line");const o=document.createElement("div");o.classList.add("menu");const r=document.createElement("h1");r.textContent=n,r.append(i);const c=document.createElement("p");c.textContent=e;const s=document.createElement("span");s.textContent=t,s.classList.add("price"),c.append(s);const A=new Image;return A.src=a,o.append(r,A,c),o}const B=document.createElement("div");B.id="content";const x=document.createElement("h1");x.textContent="Joel's Bistro",B.appendChild(x);const I=document.createElement("nav"),v=document.createElement("div");v.textContent="Home",v.classList.add("tab","tab-active");const y=document.createElement("div");y.textContent="Menu",y.classList.add("tab");const w=document.createElement("div");w.textContent="Contact",w.classList.add("tab"),I.append(v,y,w),B.appendChild(I),document.body.appendChild(B);const E=document.querySelectorAll(".tab");E.forEach((n=>{console.log(n),n.addEventListener("click",(function(){if(!n.classList.contains("tab-active"))switch(E.forEach((n=>n.classList.remove("tab-active"))),this.classList.add("tab-active"),function(){for(;I.nextElementSibling;)I.nextElementSibling.remove()}(),n){case y:!function(){const n=document.getElementById("content");document.createElement("div").classList.add("line"),n.append(b("Cheese Burger","A cheese burger with a variety of options. Vegetarian options available upon request.","$9.50",g)),n.append(b("Spaghetti","Long Italian Spaghetti cooked with minced beef and freshly ground spices and lightly coated with cheese. Served with Ketchup and local fruit smoothies","$5.50",h)),n.append(b("Chapati","Soft and delicious East African flatbread, Chapati, perfect for savoring with flavorful curries and stews. A must-try delicacy!","$2.50",C))}();break;case w:!function(){const n=document.getElementById("content"),e=document.createElement("form");e.innerHTML='\n    <form action="">\n        <div class="form-header"><em>Kindly Fill in your Details</em></div>\n        <div class="input">\n            <label for="fname" title="First Name">*First Name: </label>\n            <input type="text" id="fname" name="fname" required autofocus placeholder="John">\n        </div>\n        <div class="input">\n            <label for="lname" title="Last Name">*Last Name: </label>\n            <input type="text" id="lname" name="lname" required placeholder="Doe">\n        </div>\n        <div class="input">\n            <label for="email">Email</label>\n            <input type="email" name="email" id="email" placeholder="johndoe@gmail.com">\n        </div>\n        <div class="input">\n            <label for="phone">Phone Number</label>\n            <input type="tel" name="phone" id="phone" placeholder="+254722000000">\n        </div>\n        <div class="input">\n            <label for="comments">Comments</label>\n            <input type="text" name="comments" id="comments">\n\n        </div>\n        <button class="button" type="submit">Submit</button>\n    </form>\n    ',n.appendChild(e)}();break;default:f()}}))})),document.addEventListener("DOMContentLoaded",f)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,